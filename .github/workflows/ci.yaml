name: main
on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

env:
  BIN_NAME: "bot-sslime"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Rust
        uses: ./.github/actions/cache_rust
      - name: Build
        run: cargo build

  release-build:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add Target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Install musl-tools
        run: sudo apt-get install musl-tools
      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-musl-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-musl
      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: target/x86_64-unknown-linux-musl/release/${{ env.BIN_NAME }}
          key: build-release-musl-${{ hashFiles('src/**/*.rs', 'Cargo.lock', 'Cargo.toml') }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: ./.github/actions/cache_rust

      - name: Cargo Test
        run: cargo test

  fmt:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: ./.github/actions/cache_rust

      - name: Cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: ./.github/actions/cache_rust

      - name: Cargo clippy
        run: cargo clippy # -- -D warnings

  doc:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    needs:
      - build
      - test
      - fmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: ./.github/actions/cache_rust

      - name: Cargo doc
        run: cargo doc --no-deps

      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: target/doc/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main

  create-release:
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - release-build
      - test
      - fmt
      - clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: target/x86_64-unknown-linux-musl/release/${{ env.BIN_NAME }}
          key: build-release-musl-${{ hashFiles('src/**/*.rs', 'Cargo.lock', 'Cargo.toml') }}
      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-unknown-linux-musl/release/${{ env.BIN_NAME }}
          tag_name: ${{ github.ref_name }}
          body: |
            ${{ github.event.head_commit.message }}
      - name: Checkout for Release
        uses: actions/checkout@v4
        with:
          ref: ns
      - name: Commit Release Url
        run: |
          git reset --hard
          echo ${{ fromJSON(steps.create-release.outputs.assets)[0].browser_download_url }} > release-url
          git add release-url
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "release: ${{ github.ref_name }}"
      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --unshallow origin
          git push -f origin ns:ns
